#!/bin/bash
# shell script: periodically polls system for stats


###ACTIVE INTERFACE
interface=$(ip route get 1.1.1.1|cut -d ' ' -f 5|head -n 1)
bandwidth=NC
netbytes_down_last=0
netbytes_up_last=0
time_last=0
echo '{ "version": 1 }'
echo '['
echo '[]'

#run the 30 sec commands immediately
let 'lastrun=30'

while :
do

    ###Run these all on a 30 second interval	
    let "lastrun+=1"
    if [ $lastrun -ge 30 ]
    then
        lastrun=0
      
        ###TOTAL BANDWIDTH TRANSFER
        #stats_page=$(curl -s https://my.resnet.purdue.edu/mystats)
        #bandwidth_down=$(echo $stats_page|sed -r "s/.*Downloaded\s([0-9]+\.?[0-9]*).*/\1/")
        #bandwidth_up=$(echo $stats_page|sed -r "s/.*Uploaded\s([0-9]+\.?[0-9]*).*/\1/")
        #if [ -n "$bandwidth_up" -a -n "$bandwidth_down" ]
        #	then
        #		bandwidth="$(echo "$bandwidth_down+$bandwidth_up"|bc)GB"
        #	else
        #	bandwidth="NC"
        #fi

        ###ACTIVE INTERFACE
        interface=$(ip route|awk '/default/{print $5}')
        ###IP ADDRESS
        if [[ $interface ]]
        then
            ip_addr=$(ip addr show $interface|awk '/inet/{print $2;exit}')
        fi

        ###BATTERY STATS
        acpi_status=$(acpi)
        if [[ $acpi_status == *"Charging"* ]]
        then
            battery=$(echo $acpi_status|cut -d , -f 2)

            battery_color="#FF00CC"
        else
            battery_time=$(echo $acpi_status|cut -d ' ' -f 5)
            battery_charge=$(echo $acpi_status|awk '{gsub(/%,/,"");print $4}')

            if (( $battery_charge >= 75 ))
            then
                battery_color="#B7FF00"
            elif (( $battery_charge >= 50 ))
            then
                battery_color="#D1D100"
            elif (( $battery_charge >= 25 ))
            then
                battery_color="#E89300"
            else
                battery_color="#F23400"
            fi
        fi

        ###MINUTES USED TODAY
        mins_used=$(minutes_today.py ~/logs/usage.log)

        ###XFINITY TRIAL EXPIRATION TIME
        if [[ $(iwgetid -r) == 'xfinitywifi' ]]
        then
            xfin=$(cat /tmp/xfin)
        else
            unset xfin
        fi
    fi

    ###Run these every second

    ###NETWORK TRANSFER SPEED
    if [[ $interface ]]
    then

        time_now=$(date +%s%N)

        netbytes_down_now=$(awk "/$interface/"'{print $2}' < /proc/net/dev)
        netbytes_up_now=$(awk "/$interface/"'{print $10}' < /proc/net/dev)
        netspeed_down=$(bc <<< "scale=0;(($netbytes_down_now-$netbytes_down_last)/1000)/(($time_now-$time_last)/1000000000)")KB
        netspeed_up=$(bc <<< "scale=0;(($netbytes_up_now-$netbytes_up_last)/1000)/(($time_now-$time_last)/1000000000)")KB

        time_last=$time_now
        netbytes_down_last=$netbytes_down_now
        netbytes_up_last=$netbytes_up_now
    else
        netspeed_up=0KB
        netspeed_down=0KB
    fi

    ###DATETIME
    datetime=$(date "+%k:%M")

    ###CPU TEMP
    cputemp=$(acpi -t|cut -d ' ' -f 4,6)


    ###Send out to status bar
    printf ",["
    printf "{\"name\":\"\",\"color\":\"#ffff00\",\"full_text\":\"%s\"},"   "$ip_addr"
    printf "{\"name\":\"\",\"color\":\"#ffffff\",\"full_text\":\"%s\"},"   "$xfin"
    printf "{\"name\":\"\",\"color\":\"#ffffff\",\"full_text\":\"%s\"},"   "$mins_used"
    printf "{\"name\":\"\",\"color\":\"#4284D3\",\"full_text\":\"%s\"},"   "$netspeed_down"
    printf "{\"name\":\"\",\"color\":\"#ff9200\",\"full_text\":\"%s\"},"   "$netspeed_up"
    printf "{\"name\":\"\",\"color\":\"#ffffff\",\"full_text\":\"%s\"},"   "$datetime"
    printf "{\"name\":\"\",\"color\":\"%s\",\"full_text\":\"%s\"},"        "$battery_color" "$battery"
    printf "{\"name\":\"\",\"color\":\"#ffffff\",\"full_text\":\"%s\"}"    "$cputemp"

    printf "]"

    sleep 1

done

